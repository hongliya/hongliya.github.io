<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>检测数组 on 读书笔记</title>
    <link>http://hongliya.me/tags/%E6%A3%80%E6%B5%8B%E6%95%B0%E7%BB%84/</link>
    <description>Recent content in 检测数组 on 读书笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://hongliya.me/tags/%E6%A3%80%E6%B5%8B%E6%95%B0%E7%BB%84/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScript：检测数组</title>
      <link>http://hongliya.me/post/javascript_isarray/</link>
      <pubDate>Thu, 11 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://hongliya.me/post/javascript_isarray/</guid>
      <description>记录如何检测一个对象是不是数组的问题。
有限制的instanceof ECMAScript3规定，对于同一个全局作用域，使用instanceof操作符检测数组就能得到满意的结果：
var colors = [&#39;red&#39;]; if (colors instanceof Array) { // colors是数组 }  使用instanceof操作符检测数组，在同一个全局执行环境中没有问题，但如果网页中包含多个框架，那实际上就存在两个以上不同的全局执行环境，从而存在两个以上不同版本的Array构造函数，使用instanceof就不够用了。
大部分浏览器支持的Array.isArray() 为了解决ECMAScript3中的问题，ECMAScript5新增了Array.isArray()方法来检测数组：
var colors = [&#39;red&#39;]; if (Array.isArray(colors)) { // colors是数组 }  Array.isArray()方法优于instanceof，因为Array.isArray()能检测iframes。
支持Array.isArray的浏览器有IE9+、Safari5+、Firefox4+、Chrome。
Polyfill 兼容尚未实现Array.isArray()方法的浏览器
var colors = [&#39;red&#39;]; if (!Array.isArray) { if (isArray(colors)) { // colors是数组 } } // 低版本浏览器检测数组 function isArray(value) { return Object.prototype.toString().call(value) === &amp;quot;[Object Array]&amp;quot;; }  在任何值上调用Object原生的toString()方法都会返回一个[Object NativeConstructorName]格式的字符串。每个类在内部都有一个[[Class]]属性，这个属性就制定了上述字符串中的构造函数名。由于原声数组的构造函数与全局作用域无关，因此使用toString()就能保证返回一致的值，利用这一点就可以自定义上面的isArray函数来检测低版本浏览器的数组。
同样，也可以基于这一思路来检测某个值是不是原生函数或正则表达式：
function isFunction(value) { return Object.prototype.toString().call(value) === &#39;[Object Function]&#39;; } function isRegExp(value) { return Object.</description>
    </item>
    
  </channel>
</rss>