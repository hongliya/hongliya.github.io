<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>声明提升 on 有猫的程序员</title>
    <link>http://hongliya.me/tags/%E5%A3%B0%E6%98%8E%E6%8F%90%E5%8D%87/</link>
    <description>Recent content in 声明提升 on 有猫的程序员</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://hongliya.me/tags/%E5%A3%B0%E6%98%8E%E6%8F%90%E5%8D%87/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScript：声明提升（hoist）</title>
      <link>http://hongliya.me/post/javascript_hoist/</link>
      <pubDate>Thu, 12 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://hongliya.me/post/javascript_hoist/</guid>
      <description>读书笔记《你不知道的JavaScript（上卷）》提升。
自问自答  问：声明提升是什么鬼？ 答：在JavaScript中，作用域中所有声明（包括变量声明和函数声明）会提升到改作用域的顶部，这就是声明提升。 问：只有声明会提升？赋值操作会不会一起提升？ 答：只有声明会提升，赋值操作和其他逻辑还在原地，如果赋值操作也提升会改变代码的执行顺序，造成非常严重的破坏。 问：该怎么理解这种声明提升呢？ 答：还记得编译原理的第一步么？碰到var a = 2;时，JavaScript会将其看成两个声明：  var a; 编译阶段进行。 a = 2; 执行阶段进行。   实例分析 a = 2; var a; console.log(a); // 2  上面代码实际上是按照以下流程处理的：
var a; // 声明提前 a = 2; // 赋值操作留在原地 console.log(a); // 2  自问自答  问：函数表达式会提升？。 答：函数声明会被提升，但函数表达式不会提升。  实例分析：函数声明提升 foo(); function foo() { console.log(a); var a = 2; }  上面代码实际上是按照以下流程处理的：
function foo() { // 函数foo提升 var a; // 声明提升 console.</description>
    </item>
    
  </channel>
</rss>